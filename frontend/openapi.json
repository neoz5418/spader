{
  "openapi": "3.1.0",
  "info": {
    "title": "spader-api",
    "description": "Spader API",
    "version": "1.0.0"
  },
  "paths": {
    "/apis/user/v1/users/me": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get Current User",
        "operationId": "get_current_user",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "title": "Response 422 Get Current User Apis User V1 Users Me Get",
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ]
      }
    },
    "/apis/user/v1/users/": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "List Users",
        "operationId": "list_users",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_global_admin"
            ]
          }
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ListUsersSortOptions",
              "default": "create_time"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Direction",
              "default": "desc"
            }
          },
          {
            "name": "phone_number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "phone",
              "title": "Phone Number"
            }
          },
          {
            "name": "display_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Display Name"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "email",
              "title": "Email"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_User_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Users Apis User V1 Users  Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Register User",
        "operationId": "register_user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Register User Apis User V1 Users  Post"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/user/v1/users/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User",
        "operationId": "get_user",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Get User Apis User V1 Users  Username  Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete User",
        "operationId": "delete_user",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_global_admin"
            ]
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Delete User Apis User V1 Users  Username  Delete"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/user/v1/one_time_password": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Send One Time Password",
        "operationId": "send_one_time_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendOneTimePasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendOneTimePasswordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "title": "Response 422 Send One Time Password Apis User V1 One Time Password Post",
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apis/user/v1/users/{username}/quota": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Quota",
        "operationId": "get_user_quota",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserQuota"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Get User Quota Apis User V1 Users  Username  Quota Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Update User Quota",
        "operationId": "update_user_quota",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_global_admin"
            ]
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserQuota"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Update User Quota Apis User V1 Users  Username  Quota Patch"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Replace User Quota",
        "operationId": "replace_user_quota",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_global_admin"
            ]
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserQuota"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Replace User Quota Apis User V1 Users  Username  Quota Put"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/users/{username}/workspaces": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Create Workspace",
        "operationId": "create_workspace",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Create Workspace Apis Workspace V1 Users  Username  Workspaces Post"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "List User Workspaces",
        "operationId": "list_user_workspaces",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Search"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_Workspace_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List User Workspaces Apis Workspace V1 Users  Username  Workspaces Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/workspaces": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "List Workspaces",
        "operationId": "list_workspaces",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_global_admin"
            ]
          }
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ListWorkspacesSortOptions",
              "default": "create_time"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Direction",
              "default": "desc"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_Workspace_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Workspaces Apis Workspace V1 Workspaces Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/workspaces/{workspace}": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Workspace",
        "operationId": "get_workspace",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Get Workspace Apis Workspace V1 Workspaces  Workspace  Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "delete": {
        "tags": [
          "workspace"
        ],
        "summary": "Delete Workspace",
        "operationId": "delete_workspace",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_global_admin"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Delete Workspace Apis Workspace V1 Workspaces  Workspace  Delete"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/workspaces/{workspace}/quota": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Workspace Quota",
        "operationId": "get_workspace_quota",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceQuota"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Get Workspace Quota Apis Workspace V1 Workspaces  Workspace  Quota Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "patch": {
        "tags": [
          "workspace"
        ],
        "summary": "Update Workspace Quota",
        "operationId": "update_workspace_quota",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_global_admin"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceQuota"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceQuota"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Update Workspace Quota Apis Workspace V1 Workspaces  Workspace  Quota Patch"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "put": {
        "tags": [
          "workspace"
        ],
        "summary": "Replace Workspace Quota",
        "operationId": "replace_workspace_quota",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_global_admin"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceQuota"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceQuota"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Replace Workspace Quota Apis Workspace V1 Workspaces  Workspace  Quota Put"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/workspaces/{workspace}/account": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Workspace Account",
        "operationId": "get_workspace_account",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceAccount"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Get Workspace Account Apis Workspace V1 Workspaces  Workspace  Account Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/workspaces/{workspace}/account/recharge": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Recharge Workspace Account",
        "operationId": "recharge_workspace_account",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RechargeWorkspaceAccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceAccountRecharge"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Recharge Workspace Account Apis Workspace V1 Workspaces  Workspace  Account Recharge Post"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/workspaces/{workspace}/account/recharges": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "List Workspace Account Recharges",
        "operationId": "list_workspace_account_recharges",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_WorkspaceAccountRecharge_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Workspace Account Recharges Apis Workspace V1 Workspaces  Workspace  Account Recharges Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/workspaces/{workspace}/account/recharges/{recharge_id}": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Workspace Account Recharge",
        "operationId": "get_workspace_account_recharge",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "recharge_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Recharge Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceAccountRecharge"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Get Workspace Account Recharge Apis Workspace V1 Workspaces  Workspace  Account Recharges  Recharge Id  Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/recharges/{recharge_id}/check": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Check Workspace Account Recharge",
        "operationId": "check_workspace_account_recharge",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "recharge_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Recharge Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceAccountRecharge"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Check Workspace Account Recharge Apis Workspace V1 Recharges  Recharge Id  Check Post"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/workspaces/{workspace}/billing_records": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "List Workspace Billing Records",
        "operationId": "list_workspace_billing_records",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "resource_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource Id"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_BillingRecord_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Workspace Billing Records Apis Workspace V1 Workspaces  Workspace  Billing Records Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/workspaces/{workspace}/expenses": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "List Workspace Expenses",
        "operationId": "list_workspace_expenses",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End Date"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "enum": [
                "Africa/Abidjan",
                "Africa/Accra",
                "Africa/Addis_Ababa",
                "Africa/Algiers",
                "Africa/Asmara",
                "Africa/Asmera",
                "Africa/Bamako",
                "Africa/Bangui",
                "Africa/Banjul",
                "Africa/Bissau",
                "Africa/Blantyre",
                "Africa/Brazzaville",
                "Africa/Bujumbura",
                "Africa/Cairo",
                "Africa/Casablanca",
                "Africa/Ceuta",
                "Africa/Conakry",
                "Africa/Dakar",
                "Africa/Dar_es_Salaam",
                "Africa/Djibouti",
                "Africa/Douala",
                "Africa/El_Aaiun",
                "Africa/Freetown",
                "Africa/Gaborone",
                "Africa/Harare",
                "Africa/Johannesburg",
                "Africa/Juba",
                "Africa/Kampala",
                "Africa/Khartoum",
                "Africa/Kigali",
                "Africa/Kinshasa",
                "Africa/Lagos",
                "Africa/Libreville",
                "Africa/Lome",
                "Africa/Luanda",
                "Africa/Lubumbashi",
                "Africa/Lusaka",
                "Africa/Malabo",
                "Africa/Maputo",
                "Africa/Maseru",
                "Africa/Mbabane",
                "Africa/Mogadishu",
                "Africa/Monrovia",
                "Africa/Nairobi",
                "Africa/Ndjamena",
                "Africa/Niamey",
                "Africa/Nouakchott",
                "Africa/Ouagadougou",
                "Africa/Porto-Novo",
                "Africa/Sao_Tome",
                "Africa/Timbuktu",
                "Africa/Tripoli",
                "Africa/Tunis",
                "Africa/Windhoek",
                "America/Adak",
                "America/Anchorage",
                "America/Anguilla",
                "America/Antigua",
                "America/Araguaina",
                "America/Argentina/Buenos_Aires",
                "America/Argentina/Catamarca",
                "America/Argentina/ComodRivadavia",
                "America/Argentina/Cordoba",
                "America/Argentina/Jujuy",
                "America/Argentina/La_Rioja",
                "America/Argentina/Mendoza",
                "America/Argentina/Rio_Gallegos",
                "America/Argentina/Salta",
                "America/Argentina/San_Juan",
                "America/Argentina/San_Luis",
                "America/Argentina/Tucuman",
                "America/Argentina/Ushuaia",
                "America/Aruba",
                "America/Asuncion",
                "America/Atikokan",
                "America/Atka",
                "America/Bahia",
                "America/Bahia_Banderas",
                "America/Barbados",
                "America/Belem",
                "America/Belize",
                "America/Blanc-Sablon",
                "America/Boa_Vista",
                "America/Bogota",
                "America/Boise",
                "America/Buenos_Aires",
                "America/Cambridge_Bay",
                "America/Campo_Grande",
                "America/Cancun",
                "America/Caracas",
                "America/Catamarca",
                "America/Cayenne",
                "America/Cayman",
                "America/Chicago",
                "America/Chihuahua",
                "America/Ciudad_Juarez",
                "America/Coral_Harbour",
                "America/Cordoba",
                "America/Costa_Rica",
                "America/Creston",
                "America/Cuiaba",
                "America/Curacao",
                "America/Danmarkshavn",
                "America/Dawson",
                "America/Dawson_Creek",
                "America/Denver",
                "America/Detroit",
                "America/Dominica",
                "America/Edmonton",
                "America/Eirunepe",
                "America/El_Salvador",
                "America/Ensenada",
                "America/Fort_Nelson",
                "America/Fort_Wayne",
                "America/Fortaleza",
                "America/Glace_Bay",
                "America/Godthab",
                "America/Goose_Bay",
                "America/Grand_Turk",
                "America/Grenada",
                "America/Guadeloupe",
                "America/Guatemala",
                "America/Guayaquil",
                "America/Guyana",
                "America/Halifax",
                "America/Havana",
                "America/Hermosillo",
                "America/Indiana/Indianapolis",
                "America/Indiana/Knox",
                "America/Indiana/Marengo",
                "America/Indiana/Petersburg",
                "America/Indiana/Tell_City",
                "America/Indiana/Vevay",
                "America/Indiana/Vincennes",
                "America/Indiana/Winamac",
                "America/Indianapolis",
                "America/Inuvik",
                "America/Iqaluit",
                "America/Jamaica",
                "America/Jujuy",
                "America/Juneau",
                "America/Kentucky/Louisville",
                "America/Kentucky/Monticello",
                "America/Knox_IN",
                "America/Kralendijk",
                "America/La_Paz",
                "America/Lima",
                "America/Los_Angeles",
                "America/Louisville",
                "America/Lower_Princes",
                "America/Maceio",
                "America/Managua",
                "America/Manaus",
                "America/Marigot",
                "America/Martinique",
                "America/Matamoros",
                "America/Mazatlan",
                "America/Mendoza",
                "America/Menominee",
                "America/Merida",
                "America/Metlakatla",
                "America/Mexico_City",
                "America/Miquelon",
                "America/Moncton",
                "America/Monterrey",
                "America/Montevideo",
                "America/Montreal",
                "America/Montserrat",
                "America/Nassau",
                "America/New_York",
                "America/Nipigon",
                "America/Nome",
                "America/Noronha",
                "America/North_Dakota/Beulah",
                "America/North_Dakota/Center",
                "America/North_Dakota/New_Salem",
                "America/Nuuk",
                "America/Ojinaga",
                "America/Panama",
                "America/Pangnirtung",
                "America/Paramaribo",
                "America/Phoenix",
                "America/Port-au-Prince",
                "America/Port_of_Spain",
                "America/Porto_Acre",
                "America/Porto_Velho",
                "America/Puerto_Rico",
                "America/Punta_Arenas",
                "America/Rainy_River",
                "America/Rankin_Inlet",
                "America/Recife",
                "America/Regina",
                "America/Resolute",
                "America/Rio_Branco",
                "America/Rosario",
                "America/Santa_Isabel",
                "America/Santarem",
                "America/Santiago",
                "America/Santo_Domingo",
                "America/Sao_Paulo",
                "America/Scoresbysund",
                "America/Shiprock",
                "America/Sitka",
                "America/St_Barthelemy",
                "America/St_Johns",
                "America/St_Kitts",
                "America/St_Lucia",
                "America/St_Thomas",
                "America/St_Vincent",
                "America/Swift_Current",
                "America/Tegucigalpa",
                "America/Thule",
                "America/Thunder_Bay",
                "America/Tijuana",
                "America/Toronto",
                "America/Tortola",
                "America/Vancouver",
                "America/Virgin",
                "America/Whitehorse",
                "America/Winnipeg",
                "America/Yakutat",
                "America/Yellowknife",
                "Antarctica/Casey",
                "Antarctica/Davis",
                "Antarctica/DumontDUrville",
                "Antarctica/Macquarie",
                "Antarctica/Mawson",
                "Antarctica/McMurdo",
                "Antarctica/Palmer",
                "Antarctica/Rothera",
                "Antarctica/South_Pole",
                "Antarctica/Syowa",
                "Antarctica/Troll",
                "Antarctica/Vostok",
                "Arctic/Longyearbyen",
                "Asia/Aden",
                "Asia/Almaty",
                "Asia/Amman",
                "Asia/Anadyr",
                "Asia/Aqtau",
                "Asia/Aqtobe",
                "Asia/Ashgabat",
                "Asia/Ashkhabad",
                "Asia/Atyrau",
                "Asia/Baghdad",
                "Asia/Bahrain",
                "Asia/Baku",
                "Asia/Bangkok",
                "Asia/Barnaul",
                "Asia/Beirut",
                "Asia/Bishkek",
                "Asia/Brunei",
                "Asia/Calcutta",
                "Asia/Chita",
                "Asia/Choibalsan",
                "Asia/Chongqing",
                "Asia/Chungking",
                "Asia/Colombo",
                "Asia/Dacca",
                "Asia/Damascus",
                "Asia/Dhaka",
                "Asia/Dili",
                "Asia/Dubai",
                "Asia/Dushanbe",
                "Asia/Famagusta",
                "Asia/Gaza",
                "Asia/Harbin",
                "Asia/Hebron",
                "Asia/Ho_Chi_Minh",
                "Asia/Hong_Kong",
                "Asia/Hovd",
                "Asia/Irkutsk",
                "Asia/Istanbul",
                "Asia/Jakarta",
                "Asia/Jayapura",
                "Asia/Jerusalem",
                "Asia/Kabul",
                "Asia/Kamchatka",
                "Asia/Karachi",
                "Asia/Kashgar",
                "Asia/Kathmandu",
                "Asia/Katmandu",
                "Asia/Khandyga",
                "Asia/Kolkata",
                "Asia/Krasnoyarsk",
                "Asia/Kuala_Lumpur",
                "Asia/Kuching",
                "Asia/Kuwait",
                "Asia/Macao",
                "Asia/Macau",
                "Asia/Magadan",
                "Asia/Makassar",
                "Asia/Manila",
                "Asia/Muscat",
                "Asia/Nicosia",
                "Asia/Novokuznetsk",
                "Asia/Novosibirsk",
                "Asia/Omsk",
                "Asia/Oral",
                "Asia/Phnom_Penh",
                "Asia/Pontianak",
                "Asia/Pyongyang",
                "Asia/Qatar",
                "Asia/Qostanay",
                "Asia/Qyzylorda",
                "Asia/Rangoon",
                "Asia/Riyadh",
                "Asia/Saigon",
                "Asia/Sakhalin",
                "Asia/Samarkand",
                "Asia/Seoul",
                "Asia/Shanghai",
                "Asia/Singapore",
                "Asia/Srednekolymsk",
                "Asia/Taipei",
                "Asia/Tashkent",
                "Asia/Tbilisi",
                "Asia/Tehran",
                "Asia/Tel_Aviv",
                "Asia/Thimbu",
                "Asia/Thimphu",
                "Asia/Tokyo",
                "Asia/Tomsk",
                "Asia/Ujung_Pandang",
                "Asia/Ulaanbaatar",
                "Asia/Ulan_Bator",
                "Asia/Urumqi",
                "Asia/Ust-Nera",
                "Asia/Vientiane",
                "Asia/Vladivostok",
                "Asia/Yakutsk",
                "Asia/Yangon",
                "Asia/Yekaterinburg",
                "Asia/Yerevan",
                "Atlantic/Azores",
                "Atlantic/Bermuda",
                "Atlantic/Canary",
                "Atlantic/Cape_Verde",
                "Atlantic/Faeroe",
                "Atlantic/Faroe",
                "Atlantic/Jan_Mayen",
                "Atlantic/Madeira",
                "Atlantic/Reykjavik",
                "Atlantic/South_Georgia",
                "Atlantic/St_Helena",
                "Atlantic/Stanley",
                "Australia/ACT",
                "Australia/Adelaide",
                "Australia/Brisbane",
                "Australia/Broken_Hill",
                "Australia/Canberra",
                "Australia/Currie",
                "Australia/Darwin",
                "Australia/Eucla",
                "Australia/Hobart",
                "Australia/LHI",
                "Australia/Lindeman",
                "Australia/Lord_Howe",
                "Australia/Melbourne",
                "Australia/NSW",
                "Australia/North",
                "Australia/Perth",
                "Australia/Queensland",
                "Australia/South",
                "Australia/Sydney",
                "Australia/Tasmania",
                "Australia/Victoria",
                "Australia/West",
                "Australia/Yancowinna",
                "Brazil/Acre",
                "Brazil/DeNoronha",
                "Brazil/East",
                "Brazil/West",
                "CET",
                "CST6CDT",
                "Canada/Atlantic",
                "Canada/Central",
                "Canada/Eastern",
                "Canada/Mountain",
                "Canada/Newfoundland",
                "Canada/Pacific",
                "Canada/Saskatchewan",
                "Canada/Yukon",
                "Chile/Continental",
                "Chile/EasterIsland",
                "Cuba",
                "EET",
                "EST",
                "EST5EDT",
                "Egypt",
                "Eire",
                "Etc/GMT",
                "Etc/GMT+0",
                "Etc/GMT+1",
                "Etc/GMT+10",
                "Etc/GMT+11",
                "Etc/GMT+12",
                "Etc/GMT+2",
                "Etc/GMT+3",
                "Etc/GMT+4",
                "Etc/GMT+5",
                "Etc/GMT+6",
                "Etc/GMT+7",
                "Etc/GMT+8",
                "Etc/GMT+9",
                "Etc/GMT-0",
                "Etc/GMT-1",
                "Etc/GMT-10",
                "Etc/GMT-11",
                "Etc/GMT-12",
                "Etc/GMT-13",
                "Etc/GMT-14",
                "Etc/GMT-2",
                "Etc/GMT-3",
                "Etc/GMT-4",
                "Etc/GMT-5",
                "Etc/GMT-6",
                "Etc/GMT-7",
                "Etc/GMT-8",
                "Etc/GMT-9",
                "Etc/GMT0",
                "Etc/Greenwich",
                "Etc/UCT",
                "Etc/UTC",
                "Etc/Universal",
                "Etc/Zulu",
                "Europe/Amsterdam",
                "Europe/Andorra",
                "Europe/Astrakhan",
                "Europe/Athens",
                "Europe/Belfast",
                "Europe/Belgrade",
                "Europe/Berlin",
                "Europe/Bratislava",
                "Europe/Brussels",
                "Europe/Bucharest",
                "Europe/Budapest",
                "Europe/Busingen",
                "Europe/Chisinau",
                "Europe/Copenhagen",
                "Europe/Dublin",
                "Europe/Gibraltar",
                "Europe/Guernsey",
                "Europe/Helsinki",
                "Europe/Isle_of_Man",
                "Europe/Istanbul",
                "Europe/Jersey",
                "Europe/Kaliningrad",
                "Europe/Kiev",
                "Europe/Kirov",
                "Europe/Kyiv",
                "Europe/Lisbon",
                "Europe/Ljubljana",
                "Europe/London",
                "Europe/Luxembourg",
                "Europe/Madrid",
                "Europe/Malta",
                "Europe/Mariehamn",
                "Europe/Minsk",
                "Europe/Monaco",
                "Europe/Moscow",
                "Europe/Nicosia",
                "Europe/Oslo",
                "Europe/Paris",
                "Europe/Podgorica",
                "Europe/Prague",
                "Europe/Riga",
                "Europe/Rome",
                "Europe/Samara",
                "Europe/San_Marino",
                "Europe/Sarajevo",
                "Europe/Saratov",
                "Europe/Simferopol",
                "Europe/Skopje",
                "Europe/Sofia",
                "Europe/Stockholm",
                "Europe/Tallinn",
                "Europe/Tirane",
                "Europe/Tiraspol",
                "Europe/Ulyanovsk",
                "Europe/Uzhgorod",
                "Europe/Vaduz",
                "Europe/Vatican",
                "Europe/Vienna",
                "Europe/Vilnius",
                "Europe/Volgograd",
                "Europe/Warsaw",
                "Europe/Zagreb",
                "Europe/Zaporozhye",
                "Europe/Zurich",
                "Factory",
                "GB",
                "GB-Eire",
                "GMT",
                "GMT+0",
                "GMT-0",
                "GMT0",
                "Greenwich",
                "HST",
                "Hongkong",
                "Iceland",
                "Indian/Antananarivo",
                "Indian/Chagos",
                "Indian/Christmas",
                "Indian/Cocos",
                "Indian/Comoro",
                "Indian/Kerguelen",
                "Indian/Mahe",
                "Indian/Maldives",
                "Indian/Mauritius",
                "Indian/Mayotte",
                "Indian/Reunion",
                "Iran",
                "Israel",
                "Jamaica",
                "Japan",
                "Kwajalein",
                "Libya",
                "MET",
                "MST",
                "MST7MDT",
                "Mexico/BajaNorte",
                "Mexico/BajaSur",
                "Mexico/General",
                "NZ",
                "NZ-CHAT",
                "Navajo",
                "PRC",
                "PST8PDT",
                "Pacific/Apia",
                "Pacific/Auckland",
                "Pacific/Bougainville",
                "Pacific/Chatham",
                "Pacific/Chuuk",
                "Pacific/Easter",
                "Pacific/Efate",
                "Pacific/Enderbury",
                "Pacific/Fakaofo",
                "Pacific/Fiji",
                "Pacific/Funafuti",
                "Pacific/Galapagos",
                "Pacific/Gambier",
                "Pacific/Guadalcanal",
                "Pacific/Guam",
                "Pacific/Honolulu",
                "Pacific/Johnston",
                "Pacific/Kanton",
                "Pacific/Kiritimati",
                "Pacific/Kosrae",
                "Pacific/Kwajalein",
                "Pacific/Majuro",
                "Pacific/Marquesas",
                "Pacific/Midway",
                "Pacific/Nauru",
                "Pacific/Niue",
                "Pacific/Norfolk",
                "Pacific/Noumea",
                "Pacific/Pago_Pago",
                "Pacific/Palau",
                "Pacific/Pitcairn",
                "Pacific/Pohnpei",
                "Pacific/Ponape",
                "Pacific/Port_Moresby",
                "Pacific/Rarotonga",
                "Pacific/Saipan",
                "Pacific/Samoa",
                "Pacific/Tahiti",
                "Pacific/Tarawa",
                "Pacific/Tongatapu",
                "Pacific/Truk",
                "Pacific/Wake",
                "Pacific/Wallis",
                "Pacific/Yap",
                "Poland",
                "Portugal",
                "ROC",
                "ROK",
                "Singapore",
                "Turkey",
                "UCT",
                "US/Alaska",
                "US/Aleutian",
                "US/Arizona",
                "US/Central",
                "US/East-Indiana",
                "US/Eastern",
                "US/Hawaii",
                "US/Indiana-Starke",
                "US/Michigan",
                "US/Mountain",
                "US/Pacific",
                "US/Samoa",
                "UTC",
                "Universal",
                "W-SU",
                "WET",
                "Zulu"
              ],
              "title": "Timezone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListExpensesResponse"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Workspace Expenses Apis Workspace V1 Workspaces  Workspace  Expenses Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/workspaces/{workspace}/ssh_keys": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "List Workspace Ssh Keys",
        "operationId": "list_workspace_ssh_keys",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_SSHKey_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Workspace Ssh Keys Apis Workspace V1 Workspaces  Workspace  Ssh Keys Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Create Workspace Ssh Keys",
        "operationId": "create_workspace_ssh_keys",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSHKeyCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSHKey"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Create Workspace Ssh Keys Apis Workspace V1 Workspaces  Workspace  Ssh Keys Post"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/workspaces/{workspace}/ssh_keys/{name}": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Ssh Key",
        "operationId": "get_ssh_key",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSHKey"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Get Ssh Key Apis Workspace V1 Workspaces  Workspace  Ssh Keys  Name  Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "delete": {
        "tags": [
          "workspace"
        ],
        "summary": "Delete Workspace Ssh Keys",
        "operationId": "delete_workspace_ssh_keys",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Delete Workspace Ssh Keys Apis Workspace V1 Workspaces  Workspace  Ssh Keys  Name  Delete"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/workspaces/{workspace}/members": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Workspace Members",
        "operationId": "get_workspace_members",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_WorkspaceMember_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Get Workspace Members Apis Workspace V1 Workspaces  Workspace  Members Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/workspaces/{workspace}/invitations": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Workspace Invitations",
        "operationId": "get_workspace_invitations",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_WorkspaceInvitation_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Get Workspace Invitations Apis Workspace V1 Workspaces  Workspace  Invitations Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/workspaces/{workspace}/audit_logs": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Workspace Audit Logs",
        "operationId": "get_workspace_audit_logs",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Search"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ListAuditLogsSortOptions",
              "default": "create_time"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortOrder",
              "default": "desc"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_AuditLog_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Get Workspace Audit Logs Apis Workspace V1 Workspaces  Workspace  Audit Logs Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/workspace/v1/workspaces/{workspace}/coupons": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "List Workspace Coupons",
        "operationId": "list_workspace_coupons",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_BillingCoupon_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Workspace Coupons Apis Workspace V1 Workspaces  Workspace  Coupons Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/zones/": {
      "post": {
        "tags": [
          "compute"
        ],
        "summary": "Create a new zone",
        "operationId": "create_zone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZoneBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "title": "Response 422 Create Zone Apis Compute V1 Zones  Post",
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_global_admin"
            ]
          }
        ]
      }
    },
    "/apis/compute/v1/zones": {
      "get": {
        "tags": [
          "compute"
        ],
        "summary": "List Zones",
        "operationId": "list_zones",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_global_admin"
            ]
          }
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_Zone_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Zones Apis Compute V1 Zones Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/gpu_types": {
      "get": {
        "tags": [
          "compute"
        ],
        "summary": "List Gpu Types",
        "operationId": "list_gpu_types",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_global_admin"
            ]
          }
        ],
        "parameters": [
          {
            "name": "zone",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Zone"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_GPUTypePublic_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Gpu Types Apis Compute V1 Gpu Types Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/zones": {
      "get": {
        "tags": [
          "compute"
        ],
        "summary": "List Workspace Zones",
        "operationId": "list_workspace_zones",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_Zone_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Workspace Zones Apis Compute V1 Workspaces  Workspace  Zones Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/gpu_types": {
      "get": {
        "tags": [
          "compute"
        ],
        "summary": "List Workspace Gpu Types",
        "operationId": "list_workspace_gpu_types",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "zone",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Zone"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_GPUTypePublic_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Workspace Gpu Types Apis Compute V1 Workspaces  Workspace  Gpu Types Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/zones/{zone}/quota": {
      "get": {
        "tags": [
          "compute"
        ],
        "summary": "Get Workspace Zone Quota",
        "operationId": "get_workspace_zone_quota",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Zone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceZoneQuota"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Get Workspace Zone Quota Apis Compute V1 Workspaces  Workspace  Zones  Zone  Quota Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/instances": {
      "get": {
        "tags": [
          "compute"
        ],
        "summary": "List Instances",
        "operationId": "list_instances",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_global_admin"
            ]
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Search"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ListInstancesSortOptions",
              "default": "create_time"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortOrder",
              "default": "desc"
            }
          },
          {
            "name": "zone",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Zone"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_InstancePublic_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Instances Apis Compute V1 Instances Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/instances": {
      "get": {
        "tags": [
          "compute"
        ],
        "summary": "List Workspace Instances",
        "operationId": "list_workspace_instances",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "zone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Zone"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Search"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Status"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ListInstancesSortOptions",
              "default": "create_time"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortOrder",
              "default": "desc"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_InstancePublic_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Workspace Instances Apis Compute V1 Workspaces  Workspace  Instances Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "post": {
        "tags": [
          "compute"
        ],
        "summary": "Create and start a new instance",
        "operationId": "create_instance",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstanceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Create Instance Apis Compute V1 Workspaces  Workspace  Instances Post"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/instances/{name}": {
      "get": {
        "tags": [
          "compute"
        ],
        "summary": "Get Instance",
        "operationId": "get_instance",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instance"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Get Instance Apis Compute V1 Workspaces  Workspace  Instances  Name  Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "delete": {
        "tags": [
          "compute"
        ],
        "summary": "Delete Instance",
        "operationId": "delete_instance",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Delete Instance Apis Compute V1 Workspaces  Workspace  Instances  Name  Delete"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/instances/{name}/start": {
      "post": {
        "tags": [
          "compute"
        ],
        "summary": "Start Instance",
        "operationId": "start_instance",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Start Instance Apis Compute V1 Workspaces  Workspace  Instances  Name  Start Post"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/instances/{name}/stop": {
      "post": {
        "tags": [
          "compute"
        ],
        "summary": "Stop Instance",
        "operationId": "stop_instance",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Stop Instance Apis Compute V1 Workspaces  Workspace  Instances  Name  Stop Post"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/zones/{zone}/instances/{name}/port_forward": {
      "post": {
        "tags": [
          "compute"
        ],
        "summary": "Create Instance Port Forward",
        "operationId": "create_instance_port_forward",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Zone"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortForward"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortForward"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Create Instance Port Forward Apis Compute V1 Workspaces  Workspace  Zones  Zone  Instances  Name  Port Forward Post"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/zones/{zone}/instances/{name}/port_forwards/{port_forward_name}": {
      "delete": {
        "tags": [
          "compute"
        ],
        "summary": "Delete Instance Port Forward",
        "operationId": "delete_instance_port_forward",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Zone"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "port_forward_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Port Forward Name"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Delete Instance Port Forward Apis Compute V1 Workspaces  Workspace  Zones  Zone  Instances  Name  Port Forwards  Port Forward Name  Delete"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/zones/{zone}/instances/{name}/port_forwards": {
      "get": {
        "tags": [
          "compute"
        ],
        "summary": "List Instance Port Forwards",
        "operationId": "list_instance_port_forwards",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Zone"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PortForward"
                  },
                  "title": "Response List Instance Port Forwards Apis Compute V1 Workspaces  Workspace  Zones  Zone  Instances  Name  Port Forwards Get"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Instance Port Forwards Apis Compute V1 Workspaces  Workspace  Zones  Zone  Instances  Name  Port Forwards Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/zones/{zone}/operations": {
      "get": {
        "tags": [
          "compute"
        ],
        "summary": "List Workspace Operations",
        "operationId": "list_workspace_operations",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Zone"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_Operation_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Workspace Operations Apis Compute V1 Workspaces  Workspace  Zones  Zone  Operations Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/zones/{zone}/operations/{uid}": {
      "get": {
        "tags": [
          "compute"
        ],
        "summary": "Get Workspace Operation",
        "operationId": "get_workspace_operation",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Zone"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Uid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_Operation_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Get Workspace Operation Apis Compute V1 Workspaces  Workspace  Zones  Zone  Operations  Uid  Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/zones/{zone}/file_storages/": {
      "post": {
        "tags": [
          "compute"
        ],
        "summary": "Create File Storage",
        "operationId": "create_file_storage",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Zone"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFileStorageRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Create File Storage Apis Compute V1 Workspaces  Workspace  Zones  Zone  File Storages  Post"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/zones/{zone}/file_storages": {
      "get": {
        "tags": [
          "compute"
        ],
        "summary": "List Workspace File Storages",
        "operationId": "list_workspace_file_storages",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Zone"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_FileStorage_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Workspace File Storages Apis Compute V1 Workspaces  Workspace  Zones  Zone  File Storages Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/zones/{zone}/file_storages/{name}": {
      "get": {
        "tags": [
          "compute"
        ],
        "summary": "Get File Storage",
        "operationId": "get_file_storage",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Zone"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileStorage"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Get File Storage Apis Compute V1 Workspaces  Workspace  Zones  Zone  File Storages  Name  Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "delete": {
        "tags": [
          "compute"
        ],
        "summary": "Delete File Storage",
        "operationId": "delete_file_storage",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Zone"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Delete File Storage Apis Compute V1 Workspaces  Workspace  Zones  Zone  File Storages  Name  Delete"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/zones/{zone}/file_storages/{name}/files": {
      "get": {
        "tags": [
          "compute"
        ],
        "summary": "List Files In File Storage",
        "description": "Up to 100 files can be listed",
        "operationId": "list_files_in_file_storage",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Zone"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "/",
              "title": "Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_FileInfo_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Files In File Storage Apis Compute V1 Workspaces  Workspace  Zones  Zone  File Storages  Name  Files Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/zones/{zone}/images/": {
      "post": {
        "tags": [
          "compute"
        ],
        "summary": "Create Image",
        "operationId": "create_image",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_global_admin"
            ]
          }
        ],
        "parameters": [
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Zone"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Create Image Apis Compute V1 Zones  Zone  Images  Post"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/zones/{zone}/images/{name}": {
      "patch": {
        "tags": [
          "compute"
        ],
        "summary": "Update Image",
        "operationId": "update_image",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_global_admin"
            ]
          }
        ],
        "parameters": [
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Zone"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Update Image Apis Compute V1 Zones  Zone  Images  Name  Patch"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/zones/{zone}/images": {
      "get": {
        "tags": [
          "compute"
        ],
        "summary": "List Workspace Images",
        "operationId": "list_workspace_images",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Zone"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_Image_"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 List Workspace Images Apis Compute V1 Workspaces  Workspace  Zones  Zone  Images Get"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/compute/v1/workspaces/{workspace}/instances/calculate-cost": {
      "post": {
        "tags": [
          "compute"
        ],
        "summary": "Calculate Instance Cost",
        "operationId": "calculate_instance_cost",
        "security": [
          {
            "OAuth2PasswordBearer": [
              "permission_regular_user"
            ]
          }
        ],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceCost"
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  },
                  "title": "Response 422 Calculate Instance Cost Apis Compute V1 Workspaces  Workspace  Instances Calculate Cost Post"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/apis/oidc/v1/auth": {
      "post": {
        "tags": [
          "oidc"
        ],
        "summary": "Auth",
        "operationId": "auth",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_auth_apis_oidc_v1_auth_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "title": "Response 422 Auth Apis Oidc V1 Auth Post",
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apis/oidc/v1/token": {
      "post": {
        "tags": [
          "oidc"
        ],
        "summary": "Token",
        "operationId": "token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_token_apis_oidc_v1_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorInternal"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRefreshTokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInsufficientBalance"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorForbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    }
                  ],
                  "title": "Response 422 Token Apis Oidc V1 Token Post",
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Internal": "#/components/schemas/ErrorInternal",
                      "InvalidArgument": "#/components/schemas/ErrorInvalidArgument",
                      "RefreshTokenCannotBeEmpty": "#/components/schemas/ErrorRefreshTokenCannotBeEmpty",
                      "RefreshTokenExpired": "#/components/schemas/ErrorRefreshTokenExpired",
                      "RefreshTokenInvalid": "#/components/schemas/ErrorRefreshTokenInvalid",
                      "InsufficientBalance": "#/components/schemas/ErrorInsufficientBalance",
                      "Forbidden": "#/components/schemas/ErrorForbidden",
                      "Unauthorized": "#/components/schemas/ErrorUnauthorized",
                      "UsernameOrEmailCannotBeEmpty": "#/components/schemas/ErrorUsernameOrEmailCannotBeEmpty",
                      "ValidationFailed": "#/components/schemas/ErrorValidationFailed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Architecture": {
        "type": "string",
        "enum": [
          "amd64",
          "arm64"
        ],
        "title": "Architecture"
      },
      "AuditLog": {
        "properties": {
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Email"
          },
          "resource_id": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Id"
          },
          "resource_type": {
            "$ref": "#/components/schemas/AuditLogResourceType"
          },
          "action": {
            "$ref": "#/components/schemas/AuditLogActionType"
          },
          "create_time": {
            "type": "string",
            "format": "date-time",
            "title": "Create Time"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "workspace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace"
          },
          "zone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zone"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "resource_id",
          "resource_type",
          "action",
          "create_time"
        ],
        "title": "AuditLog"
      },
      "AuditLogActionType": {
        "type": "string",
        "enum": [
          "create",
          "update",
          "delete",
          "start",
          "stop",
          "list"
        ],
        "title": "AuditLogActionType"
      },
      "AuditLogResourceType": {
        "type": "string",
        "enum": [
          "instance",
          "image",
          "file_storage",
          "workspace",
          "user",
          "ssh_key",
          "api_key"
        ],
        "title": "AuditLogResourceType"
      },
      "AutoRenewPeriod": {
        "type": "string",
        "enum": [
          "none",
          "one_hour",
          "one_day",
          "one_week",
          "one_month",
          "real_time"
        ],
        "title": "AutoRenewPeriod"
      },
      "BillingCoupon": {
        "properties": {
          "balance": {
            "type": "integer",
            "title": "Balance",
            "default": 0
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "type": {
            "$ref": "#/components/schemas/CouponType"
          },
          "max_discount_value": {
            "type": "integer",
            "title": "Max Discount Value",
            "default": 0
          },
          "min_purchase": {
            "type": "integer",
            "title": "Min Purchase",
            "default": 0
          },
          "discount_rate": {
            "type": "integer",
            "title": "Discount Rate",
            "default": 100
          },
          "applicable_resource_type": {
            "type": "string",
            "title": "Applicable Resource Type",
            "default": ""
          },
          "valid_from": {
            "type": "string",
            "format": "date-time",
            "title": "Valid From"
          },
          "valid_to": {
            "type": "string",
            "format": "date-time",
            "title": "Valid To"
          },
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "title": "Account"
          },
          "used": {
            "type": "boolean",
            "title": "Used",
            "default": false
          },
          "meta_data": {
            "type": "object",
            "title": "Meta Data"
          },
          "claim_time": {
            "type": "string",
            "format": "date-time",
            "title": "Claim Time"
          }
        },
        "type": "object",
        "required": [
          "type",
          "valid_from",
          "valid_to",
          "name",
          "account",
          "claim_time"
        ],
        "title": "BillingCoupon"
      },
      "BillingPeriod": {
        "type": "string",
        "enum": [
          "one_hour",
          "one_day",
          "one_week",
          "one_month",
          "real_time"
        ],
        "title": "BillingPeriod"
      },
      "BillingRecord": {
        "properties": {
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "type": {
            "$ref": "#/components/schemas/BillingRecordType"
          },
          "resource_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourceType"
              },
              {
                "type": "null"
              }
            ]
          },
          "resource_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Id"
          },
          "amount": {
            "type": "integer",
            "title": "Amount"
          },
          "billing_time": {
            "type": "string",
            "format": "date-time",
            "title": "Billing Time"
          },
          "balance_before": {
            "type": "integer",
            "title": "Balance Before"
          },
          "balance_after": {
            "type": "integer",
            "title": "Balance After"
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "title": "Account"
          },
          "coupon": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Coupon"
          },
          "meta_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta Data"
          }
        },
        "type": "object",
        "required": [
          "type",
          "resource_type",
          "resource_id",
          "amount",
          "billing_time",
          "balance_before",
          "balance_after",
          "account"
        ],
        "title": "BillingRecord"
      },
      "BillingRecordType": {
        "type": "string",
        "enum": [
          "deduction",
          "top_up"
        ],
        "title": "BillingRecordType"
      },
      "Body_auth_apis_oidc_v1_auth_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_auth_apis_oidc_v1_auth_post"
      },
      "Body_token_apis_oidc_v1_token_post": {
        "properties": {
          "grant_type": {
            "$ref": "#/components/schemas/GrantType"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret",
            "default": ""
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "default": ""
          },
          "password": {
            "type": "string",
            "title": "Password",
            "default": ""
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "username": {
            "type": "string",
            "title": "Username",
            "default": ""
          },
          "phone": {
            "type": "string",
            "title": "Phone",
            "default": ""
          },
          "email": {
            "type": "string",
            "title": "Email",
            "default": ""
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "grant_type"
        ],
        "title": "Body_token_apis_oidc_v1_token_post"
      },
      "CouponType": {
        "type": "string",
        "enum": [
          "discount",
          "cash"
        ],
        "title": "CouponType"
      },
      "CreateFileStorageRequest": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
            "title": "Name",
            "description": "\nNAME is subset of RFC1123 label names:\n1. contain only lowercase alphanumeric characters or '-'\n2. start with an alphanumeric character\n3. end with an alphanumeric character\n"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "size": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^\\s*(\\d*\\.?\\d+)\\s*(\\w+)?"
              },
              {
                "type": "integer",
                "minimum": 0
              }
            ],
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "name",
          "size"
        ],
        "title": "CreateFileStorageRequest"
      },
      "CreateInstanceRequest": {
        "properties": {
          "lease_period": {
            "$ref": "#/components/schemas/BillingPeriod",
            "default": "real_time"
          },
          "auto_renew_period": {
            "$ref": "#/components/schemas/AutoRenewPeriod",
            "default": "none"
          },
          "coupon": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Coupon"
          },
          "name": {
            "type": "string",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
            "title": "Name",
            "description": "\nNAME is subset of RFC1123 label names:\n1. contain only lowercase alphanumeric characters or '-'\n2. start with an alphanumeric character\n3. end with an alphanumeric character\n"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "zone": {
            "type": "string",
            "title": "Zone"
          },
          "gpu_type": {
            "type": "string",
            "title": "Gpu Type"
          },
          "file_storages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "File Storages",
            "default": []
          },
          "image": {
            "type": "string",
            "title": "Image"
          }
        },
        "type": "object",
        "required": [
          "name",
          "zone",
          "gpu_type",
          "image"
        ],
        "title": "CreateInstanceRequest"
      },
      "Currency": {
        "type": "string",
        "enum": [
          "CNY",
          "USD"
        ],
        "title": "Currency"
      },
      "Direction": {
        "type": "string",
        "enum": [
          "desc",
          "asc"
        ],
        "title": "Direction"
      },
      "DiskType": {
        "type": "string",
        "enum": [
          "SSD",
          "HDD"
        ],
        "title": "DiskType"
      },
      "ErrorForbidden": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Forbidden"
            ],
            "const": "Forbidden",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ErrorForbidden"
      },
      "ErrorInsufficientBalance": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "InsufficientBalance"
            ],
            "const": "InsufficientBalance",
            "title": "Type"
          },
          "balance": {
            "type": "integer",
            "title": "Balance"
          }
        },
        "type": "object",
        "required": [
          "type",
          "balance"
        ],
        "title": "ErrorInsufficientBalance"
      },
      "ErrorInternal": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Internal"
            ],
            "const": "Internal",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ErrorInternal"
      },
      "ErrorInvalidArgument": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "InvalidArgument"
            ],
            "const": "InvalidArgument",
            "title": "Type"
          },
          "location": {
            "type": "string",
            "title": "Location"
          },
          "input": {
            "title": "Input"
          }
        },
        "type": "object",
        "required": [
          "type",
          "location",
          "input"
        ],
        "title": "ErrorInvalidArgument"
      },
      "ErrorRefreshTokenCannotBeEmpty": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "RefreshTokenCannotBeEmpty"
            ],
            "const": "RefreshTokenCannotBeEmpty",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ErrorRefreshTokenCannotBeEmpty"
      },
      "ErrorRefreshTokenExpired": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "RefreshTokenExpired"
            ],
            "const": "RefreshTokenExpired",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ErrorRefreshTokenExpired"
      },
      "ErrorRefreshTokenInvalid": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "RefreshTokenInvalid"
            ],
            "const": "RefreshTokenInvalid",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ErrorRefreshTokenInvalid"
      },
      "ErrorUnauthorized": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Unauthorized"
            ],
            "const": "Unauthorized",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ErrorUnauthorized"
      },
      "ErrorUsernameOrEmailCannotBeEmpty": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "UsernameOrEmailCannotBeEmpty"
            ],
            "const": "UsernameOrEmailCannotBeEmpty",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ErrorUsernameOrEmailCannotBeEmpty"
      },
      "ErrorValidationFailed": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ValidationFailed"
            ],
            "const": "ValidationFailed",
            "title": "Type"
          },
          "details": {
            "items": {
              "$ref": "#/components/schemas/ErrorInvalidArgument"
            },
            "type": "array",
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "type",
          "details"
        ],
        "title": "ErrorValidationFailed"
      },
      "ExpensesResponse": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "expense_detail": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Expense Detail"
          }
        },
        "type": "object",
        "required": [
          "date",
          "total",
          "expense_detail"
        ],
        "title": "ExpensesResponse"
      },
      "FileInfo": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
            "title": "Name",
            "description": "\nNAME is subset of RFC1123 label names:\n1. contain only lowercase alphanumeric characters or '-'\n2. start with an alphanumeric character\n3. end with an alphanumeric character\n"
          },
          "size": {
            "type": "integer",
            "minimum": 0,
            "title": "Size"
          },
          "is_dir": {
            "type": "boolean",
            "title": "Is Dir"
          },
          "modify_time": {
            "type": "string",
            "format": "date-time",
            "title": "Modify Time"
          }
        },
        "type": "object",
        "required": [
          "name",
          "size",
          "is_dir",
          "modify_time"
        ],
        "title": "FileInfo"
      },
      "FileStorage": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
            "title": "Name",
            "description": "\nNAME is subset of RFC1123 label names:\n1. contain only lowercase alphanumeric characters or '-'\n2. start with an alphanumeric character\n3. end with an alphanumeric character\n"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "size": {
            "type": "integer",
            "minimum": 0,
            "title": "Size"
          },
          "status": {
            "$ref": "#/components/schemas/FileStorageStatus"
          },
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "zone": {
            "type": "string",
            "title": "Zone"
          },
          "workspace": {
            "type": "string",
            "title": "Workspace"
          },
          "create_time": {
            "type": "string",
            "format": "date-time",
            "title": "Create Time"
          },
          "update_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Update Time"
          },
          "delete_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delete Time"
          }
        },
        "type": "object",
        "required": [
          "name",
          "size",
          "status",
          "zone",
          "workspace",
          "create_time"
        ],
        "title": "FileStorage"
      },
      "FileStorageStatus": {
        "type": "string",
        "enum": [
          "provisioning",
          "ready",
          "failed",
          "deleting"
        ],
        "title": "FileStorageStatus"
      },
      "GPUTypePublic": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "gpu_memory": {
            "type": "integer",
            "minimum": 0,
            "title": "Gpu Memory"
          },
          "memory": {
            "type": "integer",
            "minimum": 0,
            "title": "Memory"
          },
          "cpu": {
            "type": "integer",
            "title": "Cpu"
          },
          "disk_size": {
            "type": "integer",
            "minimum": 0,
            "title": "Disk Size"
          },
          "disk_type": {
            "$ref": "#/components/schemas/DiskType"
          },
          "zones": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Zones"
          },
          "prices": {
            "items": {
              "$ref": "#/components/schemas/Price"
            },
            "type": "array",
            "title": "Prices"
          }
        },
        "type": "object",
        "required": [
          "name",
          "gpu_memory",
          "memory",
          "cpu",
          "disk_size",
          "disk_type",
          "zones",
          "prices"
        ],
        "title": "GPUTypePublic"
      },
      "GrantType": {
        "type": "string",
        "enum": [
          "password",
          "refresh_token"
        ],
        "title": "GrantType"
      },
      "Image": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
            "title": "Name",
            "description": "\nNAME is subset of RFC1123 label names:\n1. contain only lowercase alphanumeric characters or '-'\n2. start with an alphanumeric character\n3. end with an alphanumeric character\n"
          },
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "architecture": {
            "$ref": "#/components/schemas/Architecture"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "visibility": {
            "$ref": "#/components/schemas/ImageVisibility"
          },
          "workspace": {
            "type": "string",
            "title": "Workspace",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "name",
          "architecture",
          "url",
          "visibility"
        ],
        "title": "Image"
      },
      "ImageVisibility": {
        "type": "string",
        "enum": [
          "public",
          "private"
        ],
        "title": "ImageVisibility"
      },
      "Instance": {
        "properties": {
          "create_time": {
            "type": "string",
            "format": "date-time",
            "title": "Create Time"
          },
          "update_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Update Time"
          },
          "delete_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delete Time"
          },
          "name": {
            "type": "string",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
            "title": "Name",
            "description": "\nNAME is subset of RFC1123 label names:\n1. contain only lowercase alphanumeric characters or '-'\n2. start with an alphanumeric character\n3. end with an alphanumeric character\n"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "status": {
            "$ref": "#/components/schemas/InstanceStatus"
          },
          "zone": {
            "type": "string",
            "title": "Zone"
          },
          "workspace": {
            "type": "string",
            "title": "Workspace"
          },
          "gpu_type": {
            "type": "string",
            "title": "Gpu Type"
          },
          "image": {
            "type": "string",
            "title": "Image"
          },
          "target_id": {
            "type": "string",
            "title": "Target Id",
            "default": ""
          },
          "services": {
            "type": "object",
            "title": "Services",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "name",
          "status",
          "zone",
          "workspace",
          "gpu_type",
          "image"
        ],
        "title": "Instance"
      },
      "InstanceCost": {
        "properties": {
          "original_price": {
            "type": "integer",
            "title": "Original Price"
          },
          "discount_amount": {
            "type": "integer",
            "title": "Discount Amount"
          },
          "final_price": {
            "type": "integer",
            "title": "Final Price"
          },
          "coupon": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BillingCoupon"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "original_price",
          "discount_amount",
          "final_price",
          "coupon"
        ],
        "title": "InstanceCost"
      },
      "InstancePublic": {
        "properties": {
          "create_time": {
            "type": "string",
            "format": "date-time",
            "title": "Create Time"
          },
          "update_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Update Time"
          },
          "delete_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delete Time"
          },
          "name": {
            "type": "string",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
            "title": "Name",
            "description": "\nNAME is subset of RFC1123 label names:\n1. contain only lowercase alphanumeric characters or '-'\n2. start with an alphanumeric character\n3. end with an alphanumeric character\n"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "status": {
            "$ref": "#/components/schemas/InstanceStatus"
          },
          "zone": {
            "type": "string",
            "title": "Zone"
          },
          "workspace": {
            "type": "string",
            "title": "Workspace"
          },
          "gpu_type": {
            "type": "string",
            "title": "Gpu Type"
          },
          "image": {
            "type": "string",
            "title": "Image"
          },
          "target_id": {
            "type": "string",
            "title": "Target Id",
            "default": ""
          },
          "services": {
            "type": "object",
            "title": "Services",
            "default": {}
          },
          "gpu_display_name": {
            "type": "string",
            "title": "Gpu Display Name"
          },
          "zone_display_name": {
            "type": "string",
            "title": "Zone Display Name"
          }
        },
        "type": "object",
        "required": [
          "name",
          "status",
          "zone",
          "workspace",
          "gpu_type",
          "image",
          "gpu_display_name",
          "zone_display_name"
        ],
        "title": "InstancePublic"
      },
      "InstanceStatus": {
        "type": "string",
        "enum": [
          "provisioning",
          "staging",
          "running",
          "stopping",
          "terminated"
        ],
        "title": "InstanceStatus",
        "description": "An instance can be in one of the following states:\n\n- `provisioning`: resources are allocated for the instance. The instance is not running yet.\n- `staging`: resources are acquired, and the instance is preparing for first boot.\n- `running`: the instance is booting up or running.\n- `stopping`: the instance is being stopped. You requested a stop, or a failure occurred. This is a temporary status after which the instance enters the `terminated` status.\n- `terminated`: the instance is stopped. You stopped the instance, or the instance encountered a failure. You can restart or delete the instance."
      },
      "InvitationStatus": {
        "type": "string",
        "enum": [
          "pending",
          "accepted",
          "rejected"
        ],
        "title": "InvitationStatus"
      },
      "ListAuditLogsSortOptions": {
        "type": "string",
        "enum": [
          "create_time"
        ],
        "const": "create_time",
        "title": "ListAuditLogsSortOptions"
      },
      "ListExpensesResponse": {
        "properties": {
          "expense_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Expense Types"
          },
          "expenses": {
            "items": {
              "$ref": "#/components/schemas/ExpensesResponse"
            },
            "type": "array",
            "title": "Expenses"
          }
        },
        "type": "object",
        "required": [
          "expense_types",
          "expenses"
        ],
        "title": "ListExpensesResponse"
      },
      "ListInstancesSortOptions": {
        "type": "string",
        "enum": [
          "create_time",
          "name"
        ],
        "title": "ListInstancesSortOptions"
      },
      "ListUsersSortOptions": {
        "type": "string",
        "enum": [
          "create_time",
          "uid",
          "delete_time",
          "name",
          "email",
          "update_time"
        ],
        "title": "ListUsersSortOptions"
      },
      "ListWorkspacesSortOptions": {
        "type": "string",
        "enum": [
          "create_time",
          "delete_time",
          "name"
        ],
        "title": "ListWorkspacesSortOptions"
      },
      "OneTimePasswordValidateType": {
        "type": "string",
        "enum": [
          "email"
        ],
        "const": "email",
        "title": "OneTimePasswordValidateType"
      },
      "Operation": {
        "properties": {
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "type": {
            "$ref": "#/components/schemas/OperationType"
          },
          "create_time": {
            "type": "string",
            "format": "date-time",
            "title": "Create Time"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "progress": {
            "type": "integer",
            "title": "Progress"
          },
          "workspace": {
            "type": "string",
            "title": "Workspace"
          },
          "status": {
            "$ref": "#/components/schemas/OperationStatus"
          },
          "status_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Message"
          },
          "target": {
            "type": "string",
            "format": "uuid",
            "title": "Target"
          },
          "user": {
            "type": "string",
            "format": "uuid",
            "title": "User"
          },
          "zone": {
            "type": "string",
            "title": "Zone"
          }
        },
        "type": "object",
        "required": [
          "type",
          "create_time",
          "progress",
          "workspace",
          "status",
          "target",
          "user",
          "zone"
        ],
        "title": "Operation"
      },
      "OperationStatus": {
        "type": "string",
        "enum": [
          "pending",
          "running",
          "failed",
          "done"
        ],
        "title": "OperationStatus"
      },
      "OperationType": {
        "type": "string",
        "enum": [
          "1",
          "2",
          "3",
          "4"
        ],
        "title": "OperationType"
      },
      "PaginatedList_AuditLog_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AuditLog"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "items",
          "pagination"
        ],
        "title": "PaginatedList[AuditLog]"
      },
      "PaginatedList_BillingCoupon_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/BillingCoupon"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "items",
          "pagination"
        ],
        "title": "PaginatedList[BillingCoupon]"
      },
      "PaginatedList_BillingRecord_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/BillingRecord"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "items",
          "pagination"
        ],
        "title": "PaginatedList[BillingRecord]"
      },
      "PaginatedList_FileInfo_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FileInfo"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "items",
          "pagination"
        ],
        "title": "PaginatedList[FileInfo]"
      },
      "PaginatedList_FileStorage_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FileStorage"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "items",
          "pagination"
        ],
        "title": "PaginatedList[FileStorage]"
      },
      "PaginatedList_GPUTypePublic_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/GPUTypePublic"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "items",
          "pagination"
        ],
        "title": "PaginatedList[GPUTypePublic]"
      },
      "PaginatedList_Image_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "items",
          "pagination"
        ],
        "title": "PaginatedList[Image]"
      },
      "PaginatedList_InstancePublic_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InstancePublic"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "items",
          "pagination"
        ],
        "title": "PaginatedList[InstancePublic]"
      },
      "PaginatedList_Operation_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "items",
          "pagination"
        ],
        "title": "PaginatedList[Operation]"
      },
      "PaginatedList_SSHKey_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/SSHKey"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "items",
          "pagination"
        ],
        "title": "PaginatedList[SSHKey]"
      },
      "PaginatedList_User_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "items",
          "pagination"
        ],
        "title": "PaginatedList[User]"
      },
      "PaginatedList_WorkspaceAccountRecharge_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceAccountRecharge"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "items",
          "pagination"
        ],
        "title": "PaginatedList[WorkspaceAccountRecharge]"
      },
      "PaginatedList_WorkspaceInvitation_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceInvitation"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "items",
          "pagination"
        ],
        "title": "PaginatedList[WorkspaceInvitation]"
      },
      "PaginatedList_WorkspaceMember_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceMember"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "items",
          "pagination"
        ],
        "title": "PaginatedList[WorkspaceMember]"
      },
      "PaginatedList_Workspace_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Workspace"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "items",
          "pagination"
        ],
        "title": "PaginatedList[Workspace]"
      },
      "PaginatedList_Zone_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Zone"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "items",
          "pagination"
        ],
        "title": "PaginatedList[Zone]"
      },
      "Pagination": {
        "properties": {
          "limit": {
            "type": "integer",
            "title": "Limit"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "limit",
          "total"
        ],
        "title": "Pagination"
      },
      "PortForward": {
        "properties": {
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "instance": {
            "type": "string",
            "format": "uuid",
            "title": "Instance"
          },
          "name": {
            "type": "string",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
            "title": "Name",
            "description": "\nNAME is subset of RFC1123 label names:\n1. contain only lowercase alphanumeric characters or '-'\n2. start with an alphanumeric character\n3. end with an alphanumeric character\n"
          },
          "port": {
            "type": "integer",
            "title": "Port"
          },
          "target_port": {
            "type": "integer",
            "title": "Target Port"
          },
          "protocol": {
            "$ref": "#/components/schemas/PortForwardProtocol"
          }
        },
        "type": "object",
        "required": [
          "instance",
          "name",
          "port",
          "target_port",
          "protocol"
        ],
        "title": "PortForward"
      },
      "PortForwardProtocol": {
        "type": "string",
        "enum": [
          "TCP",
          "UDP"
        ],
        "title": "PortForwardProtocol"
      },
      "Price": {
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "period": {
            "$ref": "#/components/schemas/BillingPeriod"
          }
        },
        "type": "object",
        "required": [
          "currency",
          "price",
          "period"
        ],
        "title": "Price"
      },
      "Provider": {
        "type": "string",
        "enum": [
          "ecloud"
        ],
        "const": "ecloud",
        "title": "Provider"
      },
      "RechargeStatus": {
        "type": "string",
        "enum": [
          "pending",
          "succeeded",
          "failed"
        ],
        "title": "RechargeStatus"
      },
      "RechargeType": {
        "type": "string",
        "enum": [
          "alipay"
        ],
        "const": "alipay",
        "title": "RechargeType"
      },
      "RechargeWorkspaceAccount": {
        "properties": {
          "amount": {
            "type": "integer",
            "title": "Amount"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "type": {
            "$ref": "#/components/schemas/RechargeType"
          },
          "callback_url": {
            "type": "string",
            "title": "Callback Url"
          }
        },
        "type": "object",
        "required": [
          "amount",
          "currency",
          "type",
          "callback_url"
        ],
        "title": "RechargeWorkspaceAccount"
      },
      "RegisterUserRequest": {
        "properties": {
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "name": {
            "type": "string",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
            "title": "Name",
            "description": "\nNAME is subset of RFC1123 label names:\n1. contain only lowercase alphanumeric characters or '-'\n2. start with an alphanumeric character\n3. end with an alphanumeric character\n"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "phone_number": {
            "type": "string",
            "format": "phone",
            "title": "Phone Number"
          },
          "password": {
            "type": "string",
            "maxLength": 32,
            "minLength": 8,
            "title": "Password",
            "description": "Minimum eight characters, at least one uppercase letter, one lowercase letter and one number"
          },
          "one_time_password_validate_type": {
            "$ref": "#/components/schemas/OneTimePasswordValidateType"
          },
          "one_time_password": {
            "type": "string",
            "title": "One Time Password"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email",
          "phone_number",
          "password",
          "one_time_password_validate_type",
          "one_time_password"
        ],
        "title": "RegisterUserRequest"
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "instance",
          "volume",
          "snapshot"
        ],
        "title": "ResourceType"
      },
      "Role": {
        "type": "string",
        "enum": [
          "global_admin",
          "user"
        ],
        "title": "Role"
      },
      "SSHKey": {
        "properties": {
          "create_time": {
            "type": "string",
            "format": "date-time",
            "title": "Create Time"
          },
          "update_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Update Time"
          },
          "delete_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delete Time"
          },
          "workspace": {
            "type": "string",
            "title": "Workspace"
          },
          "name": {
            "type": "string",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
            "title": "Name",
            "description": "\nNAME is subset of RFC1123 label names:\n1. contain only lowercase alphanumeric characters or '-'\n2. start with an alphanumeric character\n3. end with an alphanumeric character\n"
          },
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "public_key": {
            "type": "string",
            "title": "Public Key"
          }
        },
        "type": "object",
        "required": [
          "workspace",
          "name",
          "public_key"
        ],
        "title": "SSHKey"
      },
      "SSHKeyCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
            "title": "Name",
            "description": "\nNAME is subset of RFC1123 label names:\n1. contain only lowercase alphanumeric characters or '-'\n2. start with an alphanumeric character\n3. end with an alphanumeric character\n"
          },
          "public_key": {
            "type": "string",
            "title": "Public Key"
          }
        },
        "type": "object",
        "required": [
          "name",
          "public_key"
        ],
        "title": "SSHKeyCreate"
      },
      "SendOneTimePasswordRequest": {
        "properties": {
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "name": {
            "type": "string",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
            "title": "Name",
            "description": "\nNAME is subset of RFC1123 label names:\n1. contain only lowercase alphanumeric characters or '-'\n2. start with an alphanumeric character\n3. end with an alphanumeric character\n"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "phone_number": {
            "type": "string",
            "format": "phone",
            "title": "Phone Number"
          },
          "password": {
            "type": "string",
            "maxLength": 32,
            "minLength": 8,
            "title": "Password",
            "description": "Minimum eight characters, at least one uppercase letter, one lowercase letter and one number"
          },
          "type": {
            "$ref": "#/components/schemas/OneTimePasswordValidateType"
          }
        },
        "type": "object",
        "required": [
          "name",
          "phone_number",
          "password",
          "type"
        ],
        "title": "SendOneTimePasswordRequest"
      },
      "SendOneTimePasswordResponse": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/OneTimePasswordValidateType"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string",
                "format": "phone"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "SendOneTimePasswordResponse"
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ],
        "title": "SortOrder"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          },
          "scope": {
            "type": "string",
            "title": "Scope"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token",
          "expires_in",
          "token_type",
          "scope"
        ],
        "title": "Token"
      },
      "User": {
        "properties": {
          "create_time": {
            "type": "string",
            "format": "date-time",
            "title": "Create Time"
          },
          "update_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Update Time"
          },
          "delete_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delete Time"
          },
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "name": {
            "type": "string",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
            "title": "Name",
            "description": "\nNAME is subset of RFC1123 label names:\n1. contain only lowercase alphanumeric characters or '-'\n2. start with an alphanumeric character\n3. end with an alphanumeric character\n"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "phone_number": {
            "type": "string",
            "format": "phone",
            "title": "Phone Number"
          },
          "hashed_password": {
            "type": "string",
            "title": "Hashed Password"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email",
          "phone_number",
          "hashed_password",
          "role"
        ],
        "title": "User"
      },
      "UserQuota": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "limitation": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Limitation",
            "default": {}
          },
          "status": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Status",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "username"
        ],
        "title": "UserQuota"
      },
      "Workspace": {
        "properties": {
          "create_time": {
            "type": "string",
            "format": "date-time",
            "title": "Create Time"
          },
          "update_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Update Time"
          },
          "delete_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delete Time"
          },
          "name": {
            "type": "string",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
            "title": "Name",
            "description": "\nNAME is subset of RFC1123 label names:\n1. contain only lowercase alphanumeric characters or '-'\n2. start with an alphanumeric character\n3. end with an alphanumeric character\n"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "owner": {
            "type": "string",
            "title": "Owner"
          }
        },
        "type": "object",
        "required": [
          "name",
          "owner"
        ],
        "title": "Workspace"
      },
      "WorkspaceAccount": {
        "properties": {
          "workspace": {
            "type": "string",
            "title": "Workspace"
          },
          "balance": {
            "type": "integer",
            "title": "Balance"
          },
          "rate_per_hour": {
            "type": "integer",
            "title": "Rate Per Hour"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          }
        },
        "type": "object",
        "required": [
          "workspace",
          "balance",
          "rate_per_hour",
          "currency"
        ],
        "title": "WorkspaceAccount"
      },
      "WorkspaceAccountRecharge": {
        "properties": {
          "create_time": {
            "type": "string",
            "format": "date-time",
            "title": "Create Time"
          },
          "update_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Update Time"
          },
          "delete_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delete Time"
          },
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "workspace": {
            "type": "string",
            "title": "Workspace"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "amount": {
            "type": "integer",
            "title": "Amount"
          },
          "type": {
            "$ref": "#/components/schemas/RechargeType"
          },
          "pay_url": {
            "type": "string",
            "title": "Pay Url"
          },
          "status": {
            "$ref": "#/components/schemas/RechargeStatus"
          }
        },
        "type": "object",
        "required": [
          "workspace",
          "currency",
          "amount",
          "type",
          "pay_url",
          "status"
        ],
        "title": "WorkspaceAccountRecharge"
      },
      "WorkspaceCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
            "title": "Name",
            "description": "\nNAME is subset of RFC1123 label names:\n1. contain only lowercase alphanumeric characters or '-'\n2. start with an alphanumeric character\n3. end with an alphanumeric character\n"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "WorkspaceCreate"
      },
      "WorkspaceInvitation": {
        "properties": {
          "workspace": {
            "type": "string",
            "title": "Workspace"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "status": {
            "$ref": "#/components/schemas/InvitationStatus"
          },
          "create_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Create Time"
          },
          "delete_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delete Time"
          }
        },
        "type": "object",
        "required": [
          "workspace",
          "email",
          "username",
          "uid",
          "status"
        ],
        "title": "WorkspaceInvitation"
      },
      "WorkspaceMember": {
        "properties": {
          "workspace": {
            "type": "string",
            "title": "Workspace"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "role": {
            "$ref": "#/components/schemas/WorkspaceRole"
          },
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "create_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Create Time"
          },
          "delete_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delete Time"
          }
        },
        "type": "object",
        "required": [
          "workspace",
          "username",
          "role"
        ],
        "title": "WorkspaceMember"
      },
      "WorkspaceQuota": {
        "properties": {
          "workspace": {
            "type": "string",
            "title": "Workspace"
          },
          "limitation": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Limitation"
          },
          "status": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "workspace",
          "limitation",
          "status"
        ],
        "title": "WorkspaceQuota"
      },
      "WorkspaceRole": {
        "type": "string",
        "enum": [
          "owner",
          "admin",
          "member"
        ],
        "title": "WorkspaceRole"
      },
      "WorkspaceZoneQuota": {
        "properties": {
          "uid": {
            "type": "string",
            "format": "uuid",
            "title": "Uid"
          },
          "workspace": {
            "type": "string",
            "title": "Workspace"
          },
          "zone": {
            "type": "string",
            "title": "Zone"
          },
          "limitation": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Limitation",
            "default": {}
          },
          "status": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Status",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "workspace",
          "zone"
        ],
        "title": "WorkspaceZoneQuota"
      },
      "Zone": {
        "properties": {
          "create_time": {
            "type": "string",
            "format": "date-time",
            "title": "Create Time"
          },
          "update_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Update Time"
          },
          "delete_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delete Time"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "provider": {
            "$ref": "#/components/schemas/Provider"
          },
          "provider_config": {
            "type": "object",
            "title": "Provider Config"
          }
        },
        "type": "object",
        "required": [
          "name",
          "provider",
          "provider_config"
        ],
        "title": "Zone"
      },
      "ZoneBase": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ZoneBase"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {
              "permission_unauthenticated": "the unauthenticated user",
              "permission_regular_user": "a regular user",
              "permission_global_admin": "a global admin"
            },
            "tokenUrl": "/apis/oidc/v1/auth"
          }
        }
      }
    }
  }
}